{"version":3,"sources":["images/leopard.jpg","components/Structure/Column50.js","components/Image/Image.js","components/Filter/Filter.js","components/Structure/Row.js","components/ImageLoader/ImageLoader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Column50","getClass","classes","_this","props","flexDirectionColumn","react_default","a","createElement","className","this","children","Component","Image","getStyle","backgroundImage","concat","image","backgroundRepeat","backgroundSize","filter","blur","brightness","contrast","grayscale","invert","opacity","saturate","sepia","style","Filter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","handler","target","value","state","prevProps","prevState","snapshot","setState","type","min","max","defaultValue","onChange","Row","ImageLoader","loadImage","input","onClick","placeholder","App","imageUrl","Img","blurHandler","bind","assertThisInitialized","brightnessHandler","contrastHandler","grayscaleHandler","invertHandler","opacityHandler","saturateHandler","sepiaHandler","imageHandler","constrast","url","Structure_Row","Structure_Column50","components_Filter_Filter","components_ImageLoader_ImageLoader","components_Image_Image","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd876c2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leopard.1fbe0a3c.jpg\";","import React, { Component } from 'react';\r\nimport './structure.css';\r\n\r\nclass Column50 extends Component {\r\n    getClass = () => {\r\n        let classes = 'column50 row wrapper'\r\n        if(this.props.flexDirectionColumn) {\r\n            classes = 'column50 flexDirectionColumn wrapper'\r\n        }\r\n        return classes;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.getClass()}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Column50;","import React, { Component } from 'react';\r\nimport './Image.css';\r\n\r\nclass Image extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            backgroundImage: `url('${this.props.image}')`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            filter: `blur(${this.props.blur}px) \r\n                    brightness(${this.props.brightness/100})\r\n                    contrast(${this.props.contrast})\r\n                    grayscale(${this.props.grayscale}%)\r\n                    invert(${this.props.invert}%)\r\n                    opacity(${this.props.opacity}%)\r\n                    saturate(${this.props.saturate}%)\r\n                    sepia(${this.props.sepia}%)`,\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return(\r\n            <div className=\"flex50\" style={this.getStyle()}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Image;","import React, { Component } from 'react';\r\nimport './Filter.css';\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filter: '',\r\n        }        \r\n    };\r\n\r\n    getStyle = (filter) => {\r\n        return {\r\n            backgroundImage: `url('${this.props.image}')`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            filter: `${filter}`,\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.value !== prevProps.value) {\r\n            switch (this.props.filter) {\r\n                case 'blur': \r\n                    this.setState({filter: `blur(${this.props.value/10 - 1}px)`})\r\n                break;\r\n                case 'brightness':\r\n                    this.setState({filter: `brightness(${this.props.value/100})`})\r\n                break;\r\n                case 'contrast':\r\n                    this.setState({filter: `contrast(${this.props.value})`});\r\n                break;\r\n                case 'grayscale':\r\n                    this.setState({filter: `grayscale(${this.props.value}%)`});\r\n                break;\r\n                case 'invert': \r\n                    this.setState({filter: `invert(${this.props.value}%)`});\r\n                break;\r\n                case 'opacity':\r\n                    this.setState({filter: `opacity(${this.props.value}%)`});\r\n                break;\r\n                case 'saturate':\r\n                    this.setState({filter: `saturate(${this.props.value}%)`});\r\n                break;\r\n                case 'sepia': \r\n                    this.setState({filter: `sepia(${this.props.value}%)`})\r\n                break;\r\n                default: \r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.props.handler(event.target.value)\r\n    }   \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"filter50 center\" style={this.getStyle(this.state.filter)}>\r\n                <input \r\n                    type=\"range\" \r\n                    min=\"0\" \r\n                    max=\"100\" \r\n                    className=\"\" \r\n                    defaultValue={this.props.value} \r\n                    onChange={this.handleChange}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './structure.css';\r\n\r\nconst Row = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport './ImageLoader.css';\r\n\r\nclass ImageLoader extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n        }\r\n    }\r\n\r\n    loadImage = () => {\r\n        if (this.state.input !== '') {\r\n            this.props.handler(this.state.input)\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ input: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bottomBlack\">\r\n                <button onClick={this.loadImage}>Load</button>\r\n                <input type=\"text\" placeholder=\"Insert image link\" onChange={this.handleChange}></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLoader;","import React, { Component } from 'react';\nimport './App.css';\nimport Column50 from './components/Structure/Column50';\nimport Image from './components/Image/Image';\nimport Img from './images/leopard.jpg';\nimport Filter from './components/Filter/Filter';\nimport Row from './components/Structure/Row';\nimport ImageLoader from './components/ImageLoader/ImageLoader';\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        blur: '0',\n        brightness: '100',\n        contrast: '1',\n        grayscale: '0',\n        invert: '0',\n        opacity: '100',\n        saturate: '100',\n        sepia: '0',\n        imageUrl: Img,\n      };\n      this.blurHandler = this.blurHandler.bind(this);\n      this.brightnessHandler = this.brightnessHandler.bind(this);\n      this.contrastHandler = this.contrastHandler.bind(this);\n      this.grayscaleHandler = this.grayscaleHandler.bind(this);\n      this.invertHandler = this.invertHandler.bind(this);\n      this.opacityHandler = this.opacityHandler.bind(this);\n      this.saturateHandler = this.saturateHandler.bind(this);\n      this.sepiaHandler = this.sepiaHandler.bind(this);\n      this.imageHandler = this.imageHandler.bind(this);\n    }\n  \n  blurHandler(value) {\n    this.setState({\n      blur: value\n    })\n  }\n  \n  brightnessHandler(value) {\n    this.setState({\n      brightness: value\n    })\n  }\n  \n  contrastHandler(value) {\n    this.setState({\n      constrast: value\n    })\n  }\n  \n  grayscaleHandler(value) {\n    this.setState({\n      grayscale: value\n    })\n  }\n  \n  invertHandler(value) {\n    this.setState({\n      invert: value\n    })\n  }\n  \n  opacityHandler(value) {\n    this.setState({\n      opacity: value\n    })\n  }\n  \n  saturateHandler(value) {\n    this.setState({\n      saturate: value\n    })\n  }\n  \n  sepiaHandler(value) {\n    this.setState({\n      sepia: value\n    })\n  }\n\n  imageHandler(url) {\n    this.setState({\n      imageUrl: url,\n    })\n  }\n  \n  render() {\n    return (\n      <Row >\n        <Column50>\n            <Filter image={this.state.imageUrl} filter='blur' value={this.state.blur} handler={this.blurHandler}/>\n            <Filter image={this.state.imageUrl} filter='brightness' value={this.state.brightness} handler={this.brightnessHandler}/>\n            <Filter image={this.state.imageUrl} filter='contrast' value={this.state.contrast} handler={this.contrastHandler}/>\n            <Filter image={this.state.imageUrl} filter='grayscale' value={this.state.grayscale} handler={this.grayscaleHandler}/>\n            <Filter image={this.state.imageUrl} filter='invert' value={this.state.invert} handler={this.invertHandler}/>\n            <Filter image={this.state.imageUrl} filter='opacity' value={this.state.opacity} handler={this.opacityHandler}/>\n            <Filter image={this.state.imageUrl} filter='saturate' value={this.state.saturate} handler={this.saturateHandler}/>\n            <Filter image={this.state.imageUrl} filter='sepia' value={this.state.sepia} handler={this.sepiaHandler}/>\n        </Column50>\n        <Column50 flexDirectionColumn>\n          <ImageLoader handler={this.imageHandler}/>\n          <Image\n            image={this.state.imageUrl}\n            blur={this.state.blur}\n            brightness={this.state.brightness}\n            contrast={this.state.contrast}\n            grayscale={this.state.grayscale}\n            invert={this.state.invert}\n            opacity={this.state.opacity}\n            saturate={this.state.saturate}\n            sepia={this.state.sepia}\n          />\n        </Column50>\n      </Row>    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}